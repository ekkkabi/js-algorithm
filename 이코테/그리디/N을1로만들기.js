/**
 * 
 * < 문제 >
 * N 과 K 가 주어질 때 N 이 1이 될 때까지 1번 혹은 2번의 과정을 수행해야 하는 최소 횟수를 구하는 프로그램을 작성하시오.
 * 어떠한 수 N 이 1이 될 떄까지 다음의 두 과정 중 하나를 반복적으로 선택하여 수행
 * 단, 두 번째 연산은 N 이 K로 나누어 떨어질때만 선택할 수 있다.
 *
 * 1. N 에서 1 을 뺀다.
 * 2. N 을 K 로 나눈다.
 *
 * ex. N=17, K=4 가정.
 * 1번의 과정을 한 번 수행하면 N 은 16이 된다.
 * 이후에 2번 과정을 두번 수행하면 N 은 1이 된다.
 * 결과적으로, 이 경우 전체 과정을 실행한 횟수는 3이 된다.
 * 이는 N 을 1로 만드는 최소 횟수이다.
 *
 *
 * < 아이디어 >
 * 최대한 많이 나누기!
 * 1. N 이 K 의 배수일 경우 -> 2 번 수행
 * 2. 배수가 아닐 경우 -> 1 번 수행
 *
 */

let N = 25;
let K = 3;

let count = 0;

while (N > 1) {
    if (N % K === 0) N = parseInt(N / K);
    else N -= 1;
    count++;
}
console.log(count);
