/**
 *
 * < 문제 >
 * 각 자리 숫자(0~9)로만 이루어진 문자열 S 가 주어졌을 떄, 왼쪽부터 오른쪽으로 하나씩 모든 숫자를 확인하며 숫자 사이에 'X' 혹은 '+' 연산자를 넣어 결과적으로 만들어질 수 있는 가장 큰 수를 구하는 프로그램을 작성하세요.
 * 단, + 보다 X 를 먼저 계산하는 일반적인 방식과는 달리, 모든 연산은 왼쪽에서부터 순서대로 이루어진다고 가정한다.
 *
 * ex. 02984 라는 문자열로 만들 수 있는 가장 큰 수는 ((((0+2) X 9) X 8) X 4) = 576 입니다.
 * 또한 만들어질 수 있는 가장 큰 수는 항상 20억 이하의 정수가 되도록 입력이 주어집니다.
 *
 *
 * < 아이디어 >
 * 피연산자 중 하나가 0 혹은 1 일 경우 -> + 더하기
 * 이외는 -> X 곱하기
 */

let num = '02984';
let arr = num.split('').map(Number);
let result = arr[0];

for (let i = 0; i < arr.length; i++) {
    if (arr[i - 1] === 0 || arr[i - 1] === 1 || arr[i] === 0 || arr[i] === 1) {
        result += arr[i];
    } else {
        result *= arr[i];
    }
}

console.log(result);
